/*
 This file is part of the Computer Breaker project.

    Computer Breaker is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    Computer Breaker is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Computer Breaker; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#ifndef TARGETINFORMATIONSHANDLER_HH_
#define TARGETINFORMATIONSHANDLER_HH_

#include "../models/Platform.hh"
#include "../models/Service.hh"
#include "../util/constants.h"
#include "../util/TCollection.hh"


/**
 * The TargetInformationsHandler class is used in order to :
 *  - Transform the output file generated by nessus
 *  - Retrieve informations about the remote machine
 */
class TargetInformationsHandler {
  
  private:
  	// -----------------------------------------------------------------------
    //  Private Attributes
    // -----------------------------------------------------------------------
  	std::string _xml_file_path;
  	std::string _platform_name_query;
  	std::string _distribution_name_query;
  	std::string _services_nodeset_query;
  

  
  public:
	// -----------------------------------------------------------------------
    //  Constructors and Detructor
    // -----------------------------------------------------------------------
	/** @name Constructors */
    //@{
    
    /**
      * Construct the 
      */
	TargetInformationsHandler();
	//@}
	
	/** @name Destructor */
    //@{
    
    /**
      * Destructor
      */
	~TargetInformationsHandler();
	//@}
	
	// -----------------------------------------------------------------------
    //  Public methods
    // -----------------------------------------------------------------------

    /** @name Public methods */
    //@{
    /**
     * Transform the  Nessus report into a clean XML
     */
	bool transformNessusResults();
	
	/**
	 * 
	 */
	bool checkInformationsValidity();
	//@}
	
	// -----------------------------------------------------------------------
    //  Getter methods
    // -----------------------------------------------------------------------

    /** @name Getter methods */
    //@{
    
    /**
     * Return the information about the platform
     * 
     * The description contains :
 	 * - name
 	 * - associate distributions 
 	 * 
 	 * @return The Platform
     */
	Platform *getTargetPlatform();
	
	/**
 	 * Return the active services on the remote host
 	 * 
 	 * This method return a list of all the active services on the remote host
 	 * 
 	 * @return The services
 	 */
	TCollection<Service*> *getTargetServices();
	
	/**
	 * Return the number of identified Services on the Remote host
	 * 
	 * @return The number of identified services
	 */
	int getTargetNbIdentifiedServices();
	
	/**
	 * Return the number of open ports on the remote host
	 * 
	 * @return The number of open ports
	 */
	int getTargetNbOpenPorts();
	
	//@}
  
};

#endif /*TARGETINFORMATIONSHANDLER_HH_*/
